{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [],
   "source": [
    "import glob\n",
    "import os\n",
    "from datetime import datetime\n",
    "from pathlib import Path\n",
    "\n",
    "import contextily as cx\n",
    "import geopandas as gpd\n",
    "import pandas as pd\n",
    "from matplotlib import pyplot as plt\n",
    "from shapely.geometry import LineString, Point, Polygon, box, MultiPolygon\n",
    "from tqdm import tqdm"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Utility functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Function to calculate time range in seconds\n",
    "def calculate_time_range(start_date: datetime, end_date: datetime) -> float:\n",
    "    \"\"\"\n",
    "    Calculates the time range in seconds between two given dates.\n",
    "\n",
    "    Parameters:\n",
    "    start_date (datetime): The starting date.\n",
    "    end_date (datetime): The ending date.\n",
    "\n",
    "    Returns:\n",
    "    float: The time range in seconds.\n",
    "    \"\"\"\n",
    "    return (end_date - start_date).total_seconds()\n",
    "\n",
    "\n",
    "def filter_and_sort_metadata(metadata_df: pd.DataFrame) -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Filter and sort the metadata DataFrame.\n",
    "\n",
    "    Args:\n",
    "        metadata_df (pandas.DataFrame): The DataFrame containing the semiorbits\n",
    "            metadata.\n",
    "\n",
    "    Returns:\n",
    "        pandas.DataFrame: The filtered and sorted metadata DataFrame.\n",
    "    \"\"\"\n",
    "\n",
    "    # Sort DataFrame by 'semiorbit_nr' and 'time_range_seconds' in descending order\n",
    "    metadata_df_sorted = metadata_df.sort_values(\n",
    "        by=[\"semiorbit_nr\", \"time_range_seconds\"], ascending=[True, False]\n",
    "    )\n",
    "\n",
    "    # Keep only the first occurrence of each 'semiorbit_nr' (which will be the one with\n",
    "    # the largest time range)\n",
    "    filtered_metadata_df = metadata_df_sorted.drop_duplicates(\n",
    "        subset=[\"semiorbit_nr\"], keep=\"first\"\n",
    "    )\n",
    "\n",
    "    filtered_metadata_df.reset_index(drop=True, inplace=True)\n",
    "\n",
    "    # Drop unnecessary columns\n",
    "    filtered_metadata_df = filtered_metadata_df.drop(\n",
    "        columns=[\"time_range_seconds\", \"data_start_time\", \"data_end_time\"]\n",
    "    )\n",
    "\n",
    "    return filtered_metadata_df\n",
    "\n",
    "\n",
    "# FIXME what is the type of geometries? \n",
    "def semiorbits_filter_from_geometries(\n",
    "    start_date: datetime, end_date: datetime, geometries: list, orbit_df: pd.DataFrame\n",
    ") -> pd.DataFrame:\n",
    "    \"\"\"\n",
    "    Filters the orbits based on the specified date range and geometries.\n",
    "\n",
    "    Args:\n",
    "        start_date (datetime): The start date of the date range.\n",
    "        end_date (datetime): The end date of the date range.\n",
    "        geometries (list): A list of geometries (Polygons) to check for intersection.\n",
    "        orbit_df (pd.DataFrame): The DataFrame containing the orbits information.\n",
    "\n",
    "    Returns:\n",
    "        pd.DataFrame: The filtered DataFrame containing the orbits that match the\n",
    "            specified date range and geometries.\n",
    "    \"\"\"\n",
    "    \n",
    "    matching_orbits = []\n",
    "    if isinstance(geometries, list):\n",
    "        polygons = [Polygon(geometry) for geometry in geometries]\n",
    "    else:\n",
    "        polygons = [Polygon(geometries)]\n",
    "\n",
    "    # LC: this code was absolutely correct, but it can run faster if we avoid the \n",
    "    # loop and use the pandas capabilities to filter the DataFrame :)\n",
    "\n",
    "    # # Iterate through the orbits in the DataFrame\n",
    "    # for _, row in orbit_df.iterrows():\n",
    "    #     semiorbit_nr = row[\"semiorbit_nr\"]\n",
    "    #     orbit_geometry = row[\"geometry\"]\n",
    "    #     orbit_start_date = row[\"data_start_time\"]\n",
    "    #     orbit_end_date = row[\"data_end_time\"]\n",
    "\n",
    "    #     # Check if the orbit intersects at least one of the given polygons\n",
    "    #     if any(orbit_geometry.intersects(polygon) for polygon in polygons):\n",
    "    #         # Tests whether orbit dates intersect the specified range\n",
    "    #         if orbit_start_date <= end_date and orbit_end_date >= start_date:\n",
    "    #             matching_orbits.append(semiorbit_nr)\n",
    "\n",
    "\n",
    "    mp = MultiPolygon(polygons)\n",
    "\n",
    "    matching_orbits = orbit_df[\n",
    "        (orbit_df[\"data_start_time\"] <= end_date)\n",
    "        & (orbit_df[\"data_end_time\"] >= start_date)\n",
    "        & orbit_df[\"geometry\"].intersects(mp)\n",
    "    ]\n",
    "    \n",
    "    return matching_orbits.copy()\n",
    "\n",
    "\n",
    "def filter_matching_orbits(metadata_df, matching_orbits_df):\n",
    "    matching_orbit_values = matching_orbits_df[\"semiorbit_nr\"].tolist()\n",
    "    \n",
    "    # Filter metadata_df based on semiorbit_nr in matching_orbit_values\n",
    "    filtered_df = metadata_df[metadata_df[\"semiorbit_nr\"].isin(matching_orbit_values)]\n",
    "    \n",
    "    # Select specific columns\n",
    "    if \"Filename\" in filtered_df.columns and \"semiorbit_nr\" in filtered_df.columns and \"payload\" in filtered_df.columns:\n",
    "        filtered_df = filtered_df[[\"Filename\", \"semiorbit_nr\", \"payload\"]]\n",
    "    return filtered_df\n",
    "\n",
    "\n",
    "def parse_filename(file_name):\n",
    "    # TODO this does not always work!! NOW IT DOES \n",
    "    # CSES_01_SCM_1_L02_A2_183380_20210523_154551_20210523_162126_000.h5\n",
    "    # CSES_HEP_DDD_0219741_20220117_214156_20220117_230638_L3_0000267631.h5\n",
    "    parts = file_name.split(\"_\")\n",
    "    if parts[1]==\"HEP\":\n",
    "        # only for HEP files\n",
    "        semiorbit_nr_base = parts[3]\n",
    "        semiorbit_nr = semiorbit_nr_base[1:]\n",
    "        payload = parts[1]\n",
    "    else:\n",
    "        semiorbit_nr = parts[6]\n",
    "        payload = parts[2]\n",
    "    return semiorbit_nr, payload\n",
    "\n",
    "\n",
    "def extract_dates(file_name):\n",
    "    base_name = os.path.basename(file_name)\n",
    "    parts = base_name.split(\"_\")\n",
    "\n",
    "    start_index = None\n",
    "    for i in range(len(parts)):\n",
    "        if parts[i].isdigit() and len(parts[i]) == 8:\n",
    "            start_index = i\n",
    "            break\n",
    "\n",
    "    if start_index is None:\n",
    "        raise ValueError(f\"Date format not found in the file name: {file_name}\")\n",
    "\n",
    "    start_date_str = \"_\".join(parts[start_index : start_index + 2])\n",
    "    end_date_str = \"_\".join(parts[start_index + 2 : start_index + 4])\n",
    "\n",
    "    start_date = datetime.strptime(start_date_str, \"%Y%m%d_%H%M%S\")\n",
    "    end_date = datetime.strptime(end_date_str, \"%Y%m%d_%H%M%S\")\n",
    "\n",
    "    return start_date, end_date"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Try to get the semiorbit for hepd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('183380', 'SCM')\n",
      "('219741', 'HEP')\n"
     ]
    }
   ],
   "source": [
    "normal_file = \"CSES_01_SCM_1_L02_A2_183380_20210523_154551_20210523_162126_000.h5\"\n",
    "hep_file = \"CSES_HEP_DDD_0219741_20220117_214156_20220117_230638_L3_0000267631.h5\"\n",
    "\n",
    "\n",
    "print(parse_filename(normal_file)) \n",
    "print(parse_filename(hep_file)) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Processing functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "metadata": {},
   "outputs": [],
   "source": [
    "def parse_metadata_file(file, ax=None):\n",
    "    df = pd.read_csv(file)\n",
    "\n",
    "    name = os.path.basename(file)\n",
    "    fn_data = parse_filename(Path(file).stem)\n",
    "\n",
    "    start_date, end_date = extract_dates(file)\n",
    "\n",
    "    if start_date is None or end_date is None:\n",
    "        return None\n",
    "\n",
    "    if len(df) < 2:\n",
    "        return None\n",
    "\n",
    "    # Calculate time range in seconds\n",
    "    time_range = calculate_time_range(\n",
    "        end_date=end_date, start_date=start_date\n",
    "    )\n",
    "\n",
    "    # Verifica se ci sono dati validi di latitudine e longitudine\n",
    "    if \"Lat\" in df.columns and \"Lon\" in df.columns:\n",
    "        df = df.dropna(\n",
    "            subset=[\"Lat\", \"Lon\"]\n",
    "        )  # Rimuovi righe con valori mancanti di Lat e Lon\n",
    "\n",
    "        if len(df) >= 2:\n",
    "            # Crea la geometria LineString\n",
    "            geometry = LineString(zip(df[\"Lon\"], df[\"Lat\"]))\n",
    "            geometry = geometry.simplify(.1)\n",
    "        else:\n",
    "            geometry = None\n",
    "    else:\n",
    "        geometry = None\n",
    "\n",
    "    metadata = {\n",
    "        \"file_name\": os.path.basename(file),\n",
    "        \"geometry\": geometry,  # Assuming ls is defined elsewhere\n",
    "        \"semiorbit_nr\": fn_data[0],\n",
    "        \"time_range_seconds\": time_range,\n",
    "        \"data_start_time\": start_date,\n",
    "        \"data_end_time\": end_date,\n",
    "    }\n",
    "    return metadata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Main processing function\n",
    "def process_payload_files(base_folder, payload_name):\n",
    "    payload_metadata = []\n",
    "\n",
    "    base_folder = Path(base_folder) / payload_name\n",
    "\n",
    "    # Trova tutti i file CSV nella cartella dei payload\n",
    "    payload_files = glob.glob(str(base_folder / \"*.csv\"))\n",
    "\n",
    "    # Utilizza tqdm per visualizzare la barra di avanzamento\n",
    "    for file in tqdm(payload_files, desc=f\"Processing files in {base_folder}\"):\n",
    "        # try:\n",
    "        metadata = parse_metadata_file(file)\n",
    "        if metadata is not None:\n",
    "            metadata[\"payload\"] = payload_name\n",
    "            payload_metadata.append(metadata)\n",
    "        # except Exception as e:\n",
    "        #     print(f\"Errore nel file {file}: {e}\")\n",
    "        #     # continue  # Salta il file e passa al successivo\n",
    "\n",
    "    df_metaframe = gpd.GeoDataFrame(\n",
    "        payload_metadata, geometry=\"geometry\", crs=\"EPSG:4326\"\n",
    "    )\n",
    "    return df_metaframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# # Definisci le cartelle dei payload\n",
    "# payload_folders = [\n",
    "#     Path(\"../grp2/scientific-dashboard/data/processed/metadata/EFD_ULF\"),\n",
    "#     Path(\"../grp2/scientific-dashboard/data/processed/metadata/LAP\"),\n",
    "#     Path(\"../grp2/scientific-dashboard/data/processed/metadata/HEPP_X\"),\n",
    "#     Path(\"../grp2/scientific-dashboard/data/processed/metadata/HEPP_L\"),\n",
    "#     Path(\"../grp2/scientific-dashboard/data/processed/metadata/HEPP_H\"),\n",
    "#     Path(\"../grp2/scientific-dashboard/data/processed/metadata/SCM_ULF\"),\n",
    "#     Path(\"../grp2/scientific-dashboard/data/processed/metadata/HEPD\"),\n",
    "# ]\n",
    "\n",
    "\n",
    "# metadata_df = process_payload_files(payload_folders)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [],
   "source": [
    "def create_df_geometry_payload_orbit(payloads_metadata):\n",
    "    df_geometry_payload_orbit = payloads_metadata[\n",
    "        [\"semiorbit_nr\", \"payload\", \"geometry\", \"data_start_time\", \"data_end_time\"]\n",
    "    ].drop_duplicates(\"semiorbit_nr\", keep=\"first\")\n",
    "    \n",
    "    return df_geometry_payload_orbit\n",
    "\n",
    "\n",
    "def create_df_filename(payloads_metadata):\n",
    "    df_filename = payloads_metadata[\n",
    "        [\"file_name\", \"semiorbit_nr\", \"payload\"]\n",
    "    ].drop_duplicates(\"semiorbit_nr\", keep=\"first\")\n",
    "    \n",
    "    return df_filename"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [],
   "source": [
    "payloads_metadata = {}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Processing files in ../grp2/scientific-dashboard/data/processed/metadata/EFD_ULF: 100%|██████████| 27274/27274 [01:09<00:00, 394.87it/s]\n",
      "Processing files in ../grp2/scientific-dashboard/data/processed/metadata/LAP: 100%|██████████| 23698/23698 [00:53<00:00, 445.84it/s]\n",
      "Processing files in ../grp2/scientific-dashboard/data/processed/metadata/HEPP_X: 100%|██████████| 21602/21602 [01:48<00:00, 198.27it/s]\n",
      "Processing files in ../grp2/scientific-dashboard/data/processed/metadata/HEPP_L: 100%|██████████| 26523/26523 [02:19<00:00, 189.90it/s]\n",
      "Processing files in ../grp2/scientific-dashboard/data/processed/metadata/HEPP_H: 100%|██████████| 25690/25690 [02:13<00:00, 192.01it/s]\n",
      "Processing files in ../grp2/scientific-dashboard/data/processed/metadata/SCM_ULF: 100%|██████████| 24687/24687 [00:43<00:00, 570.49it/s]\n",
      "Processing files in ../grp2/scientific-dashboard/data/processed/metadata/HEPD: 100%|██████████| 40090/40090 [03:06<00:00, 215.36it/s]\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_name</th>\n",
       "      <th>geometry</th>\n",
       "      <th>semiorbit_nr</th>\n",
       "      <th>time_range_seconds</th>\n",
       "      <th>data_start_time</th>\n",
       "      <th>data_end_time</th>\n",
       "      <th>payload</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_244340_20220628_171631_20...</td>\n",
       "      <td>LINESTRING (-24.88753 69.50999, -27.04403 67.5...</td>\n",
       "      <td>244340</td>\n",
       "      <td>2232.0</td>\n",
       "      <td>2022-06-28 17:16:31</td>\n",
       "      <td>2022-06-28 17:53:43</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_194650_20210805_191751_20...</td>\n",
       "      <td>LINESTRING (-62.98865 64.93173, -64.78415 62.5...</td>\n",
       "      <td>194650</td>\n",
       "      <td>2079.0</td>\n",
       "      <td>2021-08-05 19:17:51</td>\n",
       "      <td>2021-08-05 19:52:30</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_265940_20221117_195050_20...</td>\n",
       "      <td>LINESTRING (-61.40434 69.50777, -63.55605 67.5...</td>\n",
       "      <td>265940</td>\n",
       "      <td>2234.0</td>\n",
       "      <td>2022-11-17 19:50:50</td>\n",
       "      <td>2022-11-17 20:28:04</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_179381_20210427_085830_20...</td>\n",
       "      <td>LINESTRING (-88.90921 -64.90304, -91.91934 -60...</td>\n",
       "      <td>179381</td>\n",
       "      <td>2079.0</td>\n",
       "      <td>2021-04-27 08:58:30</td>\n",
       "      <td>2021-04-27 09:33:09</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_223170_20220209_103657_20...</td>\n",
       "      <td>LINESTRING (63.66211 55.22137, 60.71094 48.109...</td>\n",
       "      <td>223170</td>\n",
       "      <td>362.0</td>\n",
       "      <td>2022-02-09 10:36:57</td>\n",
       "      <td>2022-02-09 10:42:59</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40084</th>\n",
       "      <td>CSES_HEP_DDD_0055571_20190202_202602_20190202_...</td>\n",
       "      <td>LINESTRING (79.1398 27.75739, 75.85726 40.5432...</td>\n",
       "      <td>055571</td>\n",
       "      <td>364.0</td>\n",
       "      <td>2019-02-02 20:26:02</td>\n",
       "      <td>2019-02-02 20:32:06</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40085</th>\n",
       "      <td>CSES_HEP_DDD_0201031_20210916_192422_20210916_...</td>\n",
       "      <td>LINESTRING (120.92087 -70.29661, 118.67874 -68...</td>\n",
       "      <td>201031</td>\n",
       "      <td>2236.0</td>\n",
       "      <td>2021-09-16 19:24:22</td>\n",
       "      <td>2021-09-16 20:01:38</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40086</th>\n",
       "      <td>CSES_HEP_DDD_0108360_20200116_022448_20200116_...</td>\n",
       "      <td>LINESTRING (179.43465 48.21544, 177.02706 40.8...</td>\n",
       "      <td>108360</td>\n",
       "      <td>2118.0</td>\n",
       "      <td>2020-01-16 02:24:48</td>\n",
       "      <td>2020-01-16 03:00:06</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40087</th>\n",
       "      <td>CSES_HEP_DDD_0117650_20200317_051447_20200317_...</td>\n",
       "      <td>LINESTRING (150.79484 70.30832, 148.56094 68.4...</td>\n",
       "      <td>117650</td>\n",
       "      <td>2239.0</td>\n",
       "      <td>2020-03-17 05:14:47</td>\n",
       "      <td>2020-03-17 05:52:06</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40088</th>\n",
       "      <td>CSES_HEP_DDD_0229060_20220320_043231_20220320_...</td>\n",
       "      <td>LINESTRING (165.68034 70.22268, 163.44173 68.3...</td>\n",
       "      <td>229060</td>\n",
       "      <td>2241.0</td>\n",
       "      <td>2022-03-20 04:32:31</td>\n",
       "      <td>2022-03-20 05:09:52</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>189563 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               file_name  \\\n",
       "0      CSES_01_EFD_1_L02_A1_244340_20220628_171631_20...   \n",
       "1      CSES_01_EFD_1_L02_A1_194650_20210805_191751_20...   \n",
       "2      CSES_01_EFD_1_L02_A1_265940_20221117_195050_20...   \n",
       "3      CSES_01_EFD_1_L02_A1_179381_20210427_085830_20...   \n",
       "4      CSES_01_EFD_1_L02_A1_223170_20220209_103657_20...   \n",
       "...                                                  ...   \n",
       "40084  CSES_HEP_DDD_0055571_20190202_202602_20190202_...   \n",
       "40085  CSES_HEP_DDD_0201031_20210916_192422_20210916_...   \n",
       "40086  CSES_HEP_DDD_0108360_20200116_022448_20200116_...   \n",
       "40087  CSES_HEP_DDD_0117650_20200317_051447_20200317_...   \n",
       "40088  CSES_HEP_DDD_0229060_20220320_043231_20220320_...   \n",
       "\n",
       "                                                geometry semiorbit_nr  \\\n",
       "0      LINESTRING (-24.88753 69.50999, -27.04403 67.5...       244340   \n",
       "1      LINESTRING (-62.98865 64.93173, -64.78415 62.5...       194650   \n",
       "2      LINESTRING (-61.40434 69.50777, -63.55605 67.5...       265940   \n",
       "3      LINESTRING (-88.90921 -64.90304, -91.91934 -60...       179381   \n",
       "4      LINESTRING (63.66211 55.22137, 60.71094 48.109...       223170   \n",
       "...                                                  ...          ...   \n",
       "40084  LINESTRING (79.1398 27.75739, 75.85726 40.5432...       055571   \n",
       "40085  LINESTRING (120.92087 -70.29661, 118.67874 -68...       201031   \n",
       "40086  LINESTRING (179.43465 48.21544, 177.02706 40.8...       108360   \n",
       "40087  LINESTRING (150.79484 70.30832, 148.56094 68.4...       117650   \n",
       "40088  LINESTRING (165.68034 70.22268, 163.44173 68.3...       229060   \n",
       "\n",
       "       time_range_seconds     data_start_time       data_end_time  payload  \n",
       "0                  2232.0 2022-06-28 17:16:31 2022-06-28 17:53:43  EFD_ULF  \n",
       "1                  2079.0 2021-08-05 19:17:51 2021-08-05 19:52:30  EFD_ULF  \n",
       "2                  2234.0 2022-11-17 19:50:50 2022-11-17 20:28:04  EFD_ULF  \n",
       "3                  2079.0 2021-04-27 08:58:30 2021-04-27 09:33:09  EFD_ULF  \n",
       "4                   362.0 2022-02-09 10:36:57 2022-02-09 10:42:59  EFD_ULF  \n",
       "...                   ...                 ...                 ...      ...  \n",
       "40084               364.0 2019-02-02 20:26:02 2019-02-02 20:32:06     HEPD  \n",
       "40085              2236.0 2021-09-16 19:24:22 2021-09-16 20:01:38     HEPD  \n",
       "40086              2118.0 2020-01-16 02:24:48 2020-01-16 03:00:06     HEPD  \n",
       "40087              2239.0 2020-03-17 05:14:47 2020-03-17 05:52:06     HEPD  \n",
       "40088              2241.0 2022-03-20 04:32:31 2022-03-20 05:09:52     HEPD  \n",
       "\n",
       "[189563 rows x 7 columns]"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "basefolder = Path(\"../grp2/scientific-dashboard/data/processed/metadata\")\n",
    "payloads = [\"EFD_ULF\", \"LAP\", \"HEPP_X\", \"HEPP_L\", \"HEPP_H\", \"SCM_ULF\", \"HEPD\"]\n",
    "\n",
    "for payload in payloads:\n",
    "    payload_metadata_df = process_payload_files(basefolder, payload)\n",
    "    payloads_metadata[payload] = payload_metadata_df\n",
    "\n",
    "payloads_metadata = pd.concat(payloads_metadata.values())\n",
    "payloads_metadata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [],
   "source": [
    "payloads_metadata.to_file(\"payloads_metadata.gpkg\", index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Load the orbits data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# payloads_metadata = gpd.read_file(\"payloads_metadata.gpkg\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "semiorbit_nr\n",
       "166910    23\n",
       "028501    21\n",
       "211000    21\n",
       "227750    21\n",
       "194501    20\n",
       "          ..\n",
       "052151     1\n",
       "043020     1\n",
       "134201     1\n",
       "101420     1\n",
       "053201     1\n",
       "Name: count, Length: 43077, dtype: int64"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "payloads_metadata[\n",
    "    [\"file_name\", \"semiorbit_nr\", \"payload\"]\n",
    "].drop_duplicates().semiorbit_nr.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_name</th>\n",
       "      <th>geometry</th>\n",
       "      <th>semiorbit_nr</th>\n",
       "      <th>time_range_seconds</th>\n",
       "      <th>data_start_time</th>\n",
       "      <th>data_end_time</th>\n",
       "      <th>payload</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_244340_20220628_171631_20...</td>\n",
       "      <td>LINESTRING (-24.88753 69.50999, -27.04403 67.5...</td>\n",
       "      <td>244340</td>\n",
       "      <td>2232.0</td>\n",
       "      <td>2022-06-28 17:16:31</td>\n",
       "      <td>2022-06-28 17:53:43</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_194650_20210805_191751_20...</td>\n",
       "      <td>LINESTRING (-62.98865 64.93173, -64.78415 62.5...</td>\n",
       "      <td>194650</td>\n",
       "      <td>2079.0</td>\n",
       "      <td>2021-08-05 19:17:51</td>\n",
       "      <td>2021-08-05 19:52:30</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_265940_20221117_195050_20...</td>\n",
       "      <td>LINESTRING (-61.40434 69.50777, -63.55605 67.5...</td>\n",
       "      <td>265940</td>\n",
       "      <td>2234.0</td>\n",
       "      <td>2022-11-17 19:50:50</td>\n",
       "      <td>2022-11-17 20:28:04</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_179381_20210427_085830_20...</td>\n",
       "      <td>LINESTRING (-88.90921 -64.90304, -91.91934 -60...</td>\n",
       "      <td>179381</td>\n",
       "      <td>2079.0</td>\n",
       "      <td>2021-04-27 08:58:30</td>\n",
       "      <td>2021-04-27 09:33:09</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_223170_20220209_103657_20...</td>\n",
       "      <td>LINESTRING (63.66211 55.22137, 60.71094 48.109...</td>\n",
       "      <td>223170</td>\n",
       "      <td>362.0</td>\n",
       "      <td>2022-02-09 10:36:57</td>\n",
       "      <td>2022-02-09 10:42:59</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40084</th>\n",
       "      <td>CSES_HEP_DDD_0055571_20190202_202602_20190202_...</td>\n",
       "      <td>LINESTRING (79.1398 27.75739, 75.85726 40.5432...</td>\n",
       "      <td>055571</td>\n",
       "      <td>364.0</td>\n",
       "      <td>2019-02-02 20:26:02</td>\n",
       "      <td>2019-02-02 20:32:06</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40085</th>\n",
       "      <td>CSES_HEP_DDD_0201031_20210916_192422_20210916_...</td>\n",
       "      <td>LINESTRING (120.92087 -70.29661, 118.67874 -68...</td>\n",
       "      <td>201031</td>\n",
       "      <td>2236.0</td>\n",
       "      <td>2021-09-16 19:24:22</td>\n",
       "      <td>2021-09-16 20:01:38</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40086</th>\n",
       "      <td>CSES_HEP_DDD_0108360_20200116_022448_20200116_...</td>\n",
       "      <td>LINESTRING (179.43465 48.21544, 177.02706 40.8...</td>\n",
       "      <td>108360</td>\n",
       "      <td>2118.0</td>\n",
       "      <td>2020-01-16 02:24:48</td>\n",
       "      <td>2020-01-16 03:00:06</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40087</th>\n",
       "      <td>CSES_HEP_DDD_0117650_20200317_051447_20200317_...</td>\n",
       "      <td>LINESTRING (150.79484 70.30832, 148.56094 68.4...</td>\n",
       "      <td>117650</td>\n",
       "      <td>2239.0</td>\n",
       "      <td>2020-03-17 05:14:47</td>\n",
       "      <td>2020-03-17 05:52:06</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40088</th>\n",
       "      <td>CSES_HEP_DDD_0229060_20220320_043231_20220320_...</td>\n",
       "      <td>LINESTRING (165.68034 70.22268, 163.44173 68.3...</td>\n",
       "      <td>229060</td>\n",
       "      <td>2241.0</td>\n",
       "      <td>2022-03-20 04:32:31</td>\n",
       "      <td>2022-03-20 05:09:52</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>189563 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               file_name  \\\n",
       "0      CSES_01_EFD_1_L02_A1_244340_20220628_171631_20...   \n",
       "1      CSES_01_EFD_1_L02_A1_194650_20210805_191751_20...   \n",
       "2      CSES_01_EFD_1_L02_A1_265940_20221117_195050_20...   \n",
       "3      CSES_01_EFD_1_L02_A1_179381_20210427_085830_20...   \n",
       "4      CSES_01_EFD_1_L02_A1_223170_20220209_103657_20...   \n",
       "...                                                  ...   \n",
       "40084  CSES_HEP_DDD_0055571_20190202_202602_20190202_...   \n",
       "40085  CSES_HEP_DDD_0201031_20210916_192422_20210916_...   \n",
       "40086  CSES_HEP_DDD_0108360_20200116_022448_20200116_...   \n",
       "40087  CSES_HEP_DDD_0117650_20200317_051447_20200317_...   \n",
       "40088  CSES_HEP_DDD_0229060_20220320_043231_20220320_...   \n",
       "\n",
       "                                                geometry semiorbit_nr  \\\n",
       "0      LINESTRING (-24.88753 69.50999, -27.04403 67.5...       244340   \n",
       "1      LINESTRING (-62.98865 64.93173, -64.78415 62.5...       194650   \n",
       "2      LINESTRING (-61.40434 69.50777, -63.55605 67.5...       265940   \n",
       "3      LINESTRING (-88.90921 -64.90304, -91.91934 -60...       179381   \n",
       "4      LINESTRING (63.66211 55.22137, 60.71094 48.109...       223170   \n",
       "...                                                  ...          ...   \n",
       "40084  LINESTRING (79.1398 27.75739, 75.85726 40.5432...       055571   \n",
       "40085  LINESTRING (120.92087 -70.29661, 118.67874 -68...       201031   \n",
       "40086  LINESTRING (179.43465 48.21544, 177.02706 40.8...       108360   \n",
       "40087  LINESTRING (150.79484 70.30832, 148.56094 68.4...       117650   \n",
       "40088  LINESTRING (165.68034 70.22268, 163.44173 68.3...       229060   \n",
       "\n",
       "       time_range_seconds     data_start_time       data_end_time  payload  \n",
       "0                  2232.0 2022-06-28 17:16:31 2022-06-28 17:53:43  EFD_ULF  \n",
       "1                  2079.0 2021-08-05 19:17:51 2021-08-05 19:52:30  EFD_ULF  \n",
       "2                  2234.0 2022-11-17 19:50:50 2022-11-17 20:28:04  EFD_ULF  \n",
       "3                  2079.0 2021-04-27 08:58:30 2021-04-27 09:33:09  EFD_ULF  \n",
       "4                   362.0 2022-02-09 10:36:57 2022-02-09 10:42:59  EFD_ULF  \n",
       "...                   ...                 ...                 ...      ...  \n",
       "40084               364.0 2019-02-02 20:26:02 2019-02-02 20:32:06     HEPD  \n",
       "40085              2236.0 2021-09-16 19:24:22 2021-09-16 20:01:38     HEPD  \n",
       "40086              2118.0 2020-01-16 02:24:48 2020-01-16 03:00:06     HEPD  \n",
       "40087              2239.0 2020-03-17 05:14:47 2020-03-17 05:52:06     HEPD  \n",
       "40088              2241.0 2022-03-20 04:32:31 2022-03-20 05:09:52     HEPD  \n",
       "\n",
       "[189563 rows x 7 columns]"
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "payloads_metadata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "payloads_metadata_droppeddup = payloads_metadata.drop_duplicates(\"semiorbit_nr\", keep=\"first\")\n",
    "payloads_metadata_droppeddup.to_file(\"payloads_metadata_droppeddup.gpkg\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_name</th>\n",
       "      <th>semiorbit_nr</th>\n",
       "      <th>payload</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_244340_20220628_171631_20...</td>\n",
       "      <td>244340</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_194650_20210805_191751_20...</td>\n",
       "      <td>194650</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_265940_20221117_195050_20...</td>\n",
       "      <td>265940</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_179381_20210427_085830_20...</td>\n",
       "      <td>179381</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_223170_20220209_103657_20...</td>\n",
       "      <td>223170</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40079</th>\n",
       "      <td>CSES_HEP_DDD_0137061_20200722_224715_20200722_...</td>\n",
       "      <td>137061</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40080</th>\n",
       "      <td>CSES_HEP_DDD_0032310_20180902_184115_20180902_...</td>\n",
       "      <td>032310</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40081</th>\n",
       "      <td>CSES_HEP_DDD_0149941_20090101_000211_20201015_...</td>\n",
       "      <td>149941</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40082</th>\n",
       "      <td>CSES_HEP_DDD_0055530_20190202_125502_20190202_...</td>\n",
       "      <td>055530</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40087</th>\n",
       "      <td>CSES_HEP_DDD_0117650_20200317_051447_20200317_...</td>\n",
       "      <td>117650</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>43077 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               file_name semiorbit_nr  payload\n",
       "0      CSES_01_EFD_1_L02_A1_244340_20220628_171631_20...       244340  EFD_ULF\n",
       "1      CSES_01_EFD_1_L02_A1_194650_20210805_191751_20...       194650  EFD_ULF\n",
       "2      CSES_01_EFD_1_L02_A1_265940_20221117_195050_20...       265940  EFD_ULF\n",
       "3      CSES_01_EFD_1_L02_A1_179381_20210427_085830_20...       179381  EFD_ULF\n",
       "4      CSES_01_EFD_1_L02_A1_223170_20220209_103657_20...       223170  EFD_ULF\n",
       "...                                                  ...          ...      ...\n",
       "40079  CSES_HEP_DDD_0137061_20200722_224715_20200722_...       137061     HEPD\n",
       "40080  CSES_HEP_DDD_0032310_20180902_184115_20180902_...       032310     HEPD\n",
       "40081  CSES_HEP_DDD_0149941_20090101_000211_20201015_...       149941     HEPD\n",
       "40082  CSES_HEP_DDD_0055530_20190202_125502_20190202_...       055530     HEPD\n",
       "40087  CSES_HEP_DDD_0117650_20200317_051447_20200317_...       117650     HEPD\n",
       "\n",
       "[43077 rows x 3 columns]"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_filename = create_df_filename(payloads_metadata)\n",
    "\n",
    "\n",
    "df_filename"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_name</th>\n",
       "      <th>geometry</th>\n",
       "      <th>semiorbit_nr</th>\n",
       "      <th>time_range_seconds</th>\n",
       "      <th>data_start_time</th>\n",
       "      <th>data_end_time</th>\n",
       "      <th>payload</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_244340_20220628_171631_20...</td>\n",
       "      <td>LINESTRING (-24.88753 69.50999, -27.04403 67.5...</td>\n",
       "      <td>244340</td>\n",
       "      <td>2232.0</td>\n",
       "      <td>2022-06-28 17:16:31</td>\n",
       "      <td>2022-06-28 17:53:43</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_194650_20210805_191751_20...</td>\n",
       "      <td>LINESTRING (-62.98865 64.93173, -64.78415 62.5...</td>\n",
       "      <td>194650</td>\n",
       "      <td>2079.0</td>\n",
       "      <td>2021-08-05 19:17:51</td>\n",
       "      <td>2021-08-05 19:52:30</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_265940_20221117_195050_20...</td>\n",
       "      <td>LINESTRING (-61.40434 69.50777, -63.55605 67.5...</td>\n",
       "      <td>265940</td>\n",
       "      <td>2234.0</td>\n",
       "      <td>2022-11-17 19:50:50</td>\n",
       "      <td>2022-11-17 20:28:04</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_179381_20210427_085830_20...</td>\n",
       "      <td>LINESTRING (-88.90921 -64.90304, -91.91934 -60...</td>\n",
       "      <td>179381</td>\n",
       "      <td>2079.0</td>\n",
       "      <td>2021-04-27 08:58:30</td>\n",
       "      <td>2021-04-27 09:33:09</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_223170_20220209_103657_20...</td>\n",
       "      <td>LINESTRING (63.66211 55.22137, 60.71094 48.109...</td>\n",
       "      <td>223170</td>\n",
       "      <td>362.0</td>\n",
       "      <td>2022-02-09 10:36:57</td>\n",
       "      <td>2022-02-09 10:42:59</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40079</th>\n",
       "      <td>CSES_HEP_DDD_0137061_20200722_224715_20200722_...</td>\n",
       "      <td>LINESTRING (67.8073 -70.26554, 65.58666 -68.38...</td>\n",
       "      <td>137061</td>\n",
       "      <td>2233.0</td>\n",
       "      <td>2020-07-22 22:47:15</td>\n",
       "      <td>2020-07-22 23:24:28</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40080</th>\n",
       "      <td>CSES_HEP_DDD_0032310_20180902_184115_20180902_...</td>\n",
       "      <td>LINESTRING (-53.7743 64.86477, -55.49345 62.56...</td>\n",
       "      <td>032310</td>\n",
       "      <td>2078.0</td>\n",
       "      <td>2018-09-02 18:41:15</td>\n",
       "      <td>2018-09-02 19:15:53</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40081</th>\n",
       "      <td>CSES_HEP_DDD_0149941_20090101_000211_20201015_...</td>\n",
       "      <td>LINESTRING (130.23824 29.49495, 128.50826 36.3...</td>\n",
       "      <td>149941</td>\n",
       "      <td>372013233.0</td>\n",
       "      <td>2009-01-01 00:02:11</td>\n",
       "      <td>2020-10-15 17:02:44</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40082</th>\n",
       "      <td>CSES_HEP_DDD_0055530_20190202_125502_20190202_...</td>\n",
       "      <td>LINESTRING (31.65601 64.80334, 29.93459 62.497...</td>\n",
       "      <td>055530</td>\n",
       "      <td>2083.0</td>\n",
       "      <td>2019-02-02 12:55:02</td>\n",
       "      <td>2019-02-02 13:29:45</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40087</th>\n",
       "      <td>CSES_HEP_DDD_0117650_20200317_051447_20200317_...</td>\n",
       "      <td>LINESTRING (150.79484 70.30832, 148.56094 68.4...</td>\n",
       "      <td>117650</td>\n",
       "      <td>2239.0</td>\n",
       "      <td>2020-03-17 05:14:47</td>\n",
       "      <td>2020-03-17 05:52:06</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>43077 rows × 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               file_name  \\\n",
       "0      CSES_01_EFD_1_L02_A1_244340_20220628_171631_20...   \n",
       "1      CSES_01_EFD_1_L02_A1_194650_20210805_191751_20...   \n",
       "2      CSES_01_EFD_1_L02_A1_265940_20221117_195050_20...   \n",
       "3      CSES_01_EFD_1_L02_A1_179381_20210427_085830_20...   \n",
       "4      CSES_01_EFD_1_L02_A1_223170_20220209_103657_20...   \n",
       "...                                                  ...   \n",
       "40079  CSES_HEP_DDD_0137061_20200722_224715_20200722_...   \n",
       "40080  CSES_HEP_DDD_0032310_20180902_184115_20180902_...   \n",
       "40081  CSES_HEP_DDD_0149941_20090101_000211_20201015_...   \n",
       "40082  CSES_HEP_DDD_0055530_20190202_125502_20190202_...   \n",
       "40087  CSES_HEP_DDD_0117650_20200317_051447_20200317_...   \n",
       "\n",
       "                                                geometry semiorbit_nr  \\\n",
       "0      LINESTRING (-24.88753 69.50999, -27.04403 67.5...       244340   \n",
       "1      LINESTRING (-62.98865 64.93173, -64.78415 62.5...       194650   \n",
       "2      LINESTRING (-61.40434 69.50777, -63.55605 67.5...       265940   \n",
       "3      LINESTRING (-88.90921 -64.90304, -91.91934 -60...       179381   \n",
       "4      LINESTRING (63.66211 55.22137, 60.71094 48.109...       223170   \n",
       "...                                                  ...          ...   \n",
       "40079  LINESTRING (67.8073 -70.26554, 65.58666 -68.38...       137061   \n",
       "40080  LINESTRING (-53.7743 64.86477, -55.49345 62.56...       032310   \n",
       "40081  LINESTRING (130.23824 29.49495, 128.50826 36.3...       149941   \n",
       "40082  LINESTRING (31.65601 64.80334, 29.93459 62.497...       055530   \n",
       "40087  LINESTRING (150.79484 70.30832, 148.56094 68.4...       117650   \n",
       "\n",
       "       time_range_seconds     data_start_time       data_end_time  payload  \n",
       "0                  2232.0 2022-06-28 17:16:31 2022-06-28 17:53:43  EFD_ULF  \n",
       "1                  2079.0 2021-08-05 19:17:51 2021-08-05 19:52:30  EFD_ULF  \n",
       "2                  2234.0 2022-11-17 19:50:50 2022-11-17 20:28:04  EFD_ULF  \n",
       "3                  2079.0 2021-04-27 08:58:30 2021-04-27 09:33:09  EFD_ULF  \n",
       "4                   362.0 2022-02-09 10:36:57 2022-02-09 10:42:59  EFD_ULF  \n",
       "...                   ...                 ...                 ...      ...  \n",
       "40079              2233.0 2020-07-22 22:47:15 2020-07-22 23:24:28     HEPD  \n",
       "40080              2078.0 2018-09-02 18:41:15 2018-09-02 19:15:53     HEPD  \n",
       "40081         372013233.0 2009-01-01 00:02:11 2020-10-15 17:02:44     HEPD  \n",
       "40082              2083.0 2019-02-02 12:55:02 2019-02-02 13:29:45     HEPD  \n",
       "40087              2239.0 2020-03-17 05:14:47 2020-03-17 05:52:06     HEPD  \n",
       "\n",
       "[43077 rows x 7 columns]"
      ]
     },
     "execution_count": 202,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "payloads_metadata_droppeddup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "53.9 ms ± 386 μs per loop (mean ± std. dev. of 7 runs, 10 loops each)\n",
      "10.4 ms ± 74.9 μs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n"
     ]
    }
   ],
   "source": [
    "p = Polygon(\n",
    "    [\n",
    "        (10.0, 10.0),\n",
    "        (10.0, 20.0),\n",
    "        (20.0, 20.0),\n",
    "        (20.0, 10.0),\n",
    "        (10.0, 10.0),\n",
    "    ]\n",
    ")\n",
    "\n",
    "bla = payloads_metadata.drop_duplicates(\"semiorbit_nr\", keep=\"first\")\n",
    "\n",
    "%timeit _ = payloads_metadata[payloads_metadata.geometry.intersects(p)]\n",
    "%timeit _ = bla[bla.geometry.intersects(p)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>semiorbit_nr</th>\n",
       "      <th>payload</th>\n",
       "      <th>geometry</th>\n",
       "      <th>data_start_time</th>\n",
       "      <th>data_end_time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>244340</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (-24.88753 69.50999, -27.04403 67.5...</td>\n",
       "      <td>2022-06-28 17:16:31</td>\n",
       "      <td>2022-06-28 17:53:43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>194650</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (-62.98865 64.93173, -64.78415 62.5...</td>\n",
       "      <td>2021-08-05 19:17:51</td>\n",
       "      <td>2021-08-05 19:52:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>265940</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (-61.40434 69.50777, -63.55605 67.5...</td>\n",
       "      <td>2022-11-17 19:50:50</td>\n",
       "      <td>2022-11-17 20:28:04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>179381</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (-88.90921 -64.90304, -91.91934 -60...</td>\n",
       "      <td>2021-04-27 08:58:30</td>\n",
       "      <td>2021-04-27 09:33:09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>223170</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (63.66211 55.22137, 60.71094 48.109...</td>\n",
       "      <td>2022-02-09 10:36:57</td>\n",
       "      <td>2022-02-09 10:42:59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40079</th>\n",
       "      <td>137061</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (67.8073 -70.26554, 65.58666 -68.38...</td>\n",
       "      <td>2020-07-22 22:47:15</td>\n",
       "      <td>2020-07-22 23:24:28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40080</th>\n",
       "      <td>032310</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (-53.7743 64.86477, -55.49345 62.56...</td>\n",
       "      <td>2018-09-02 18:41:15</td>\n",
       "      <td>2018-09-02 19:15:53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40081</th>\n",
       "      <td>149941</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (130.23824 29.49495, 128.50826 36.3...</td>\n",
       "      <td>2009-01-01 00:02:11</td>\n",
       "      <td>2020-10-15 17:02:44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40082</th>\n",
       "      <td>055530</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (31.65601 64.80334, 29.93459 62.497...</td>\n",
       "      <td>2019-02-02 12:55:02</td>\n",
       "      <td>2019-02-02 13:29:45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40087</th>\n",
       "      <td>117650</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (150.79484 70.30832, 148.56094 68.4...</td>\n",
       "      <td>2020-03-17 05:14:47</td>\n",
       "      <td>2020-03-17 05:52:06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>43077 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      semiorbit_nr  payload  \\\n",
       "0           244340  EFD_ULF   \n",
       "1           194650  EFD_ULF   \n",
       "2           265940  EFD_ULF   \n",
       "3           179381  EFD_ULF   \n",
       "4           223170  EFD_ULF   \n",
       "...            ...      ...   \n",
       "40079       137061     HEPD   \n",
       "40080       032310     HEPD   \n",
       "40081       149941     HEPD   \n",
       "40082       055530     HEPD   \n",
       "40087       117650     HEPD   \n",
       "\n",
       "                                                geometry     data_start_time  \\\n",
       "0      LINESTRING (-24.88753 69.50999, -27.04403 67.5... 2022-06-28 17:16:31   \n",
       "1      LINESTRING (-62.98865 64.93173, -64.78415 62.5... 2021-08-05 19:17:51   \n",
       "2      LINESTRING (-61.40434 69.50777, -63.55605 67.5... 2022-11-17 19:50:50   \n",
       "3      LINESTRING (-88.90921 -64.90304, -91.91934 -60... 2021-04-27 08:58:30   \n",
       "4      LINESTRING (63.66211 55.22137, 60.71094 48.109... 2022-02-09 10:36:57   \n",
       "...                                                  ...                 ...   \n",
       "40079  LINESTRING (67.8073 -70.26554, 65.58666 -68.38... 2020-07-22 22:47:15   \n",
       "40080  LINESTRING (-53.7743 64.86477, -55.49345 62.56... 2018-09-02 18:41:15   \n",
       "40081  LINESTRING (130.23824 29.49495, 128.50826 36.3... 2009-01-01 00:02:11   \n",
       "40082  LINESTRING (31.65601 64.80334, 29.93459 62.497... 2019-02-02 12:55:02   \n",
       "40087  LINESTRING (150.79484 70.30832, 148.56094 68.4... 2020-03-17 05:14:47   \n",
       "\n",
       "            data_end_time  \n",
       "0     2022-06-28 17:53:43  \n",
       "1     2021-08-05 19:52:30  \n",
       "2     2022-11-17 20:28:04  \n",
       "3     2021-04-27 09:33:09  \n",
       "4     2022-02-09 10:42:59  \n",
       "...                   ...  \n",
       "40079 2020-07-22 23:24:28  \n",
       "40080 2018-09-02 19:15:53  \n",
       "40081 2020-10-15 17:02:44  \n",
       "40082 2019-02-02 13:29:45  \n",
       "40087 2020-03-17 05:52:06  \n",
       "\n",
       "[43077 rows x 5 columns]"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_geometry_payload_orbit = create_df_geometry_payload_orbit(payloads_metadata)\n",
    "\n",
    "df_geometry_payload_orbit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [],
   "source": [
    "start_date = pd.Timestamp('2018-07-31')\n",
    "end_date = pd.Timestamp('2022-12-31')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### devo creare dei filtri, che utilizza due tipologie di dataframe. Un dataframe contiene le colonne semiorbit_nr, payload, geometry, data_start_time e data_end_time. l'altro dataframe contiene: filename, payload e semiorbit_nr.\n",
    "Un filtro deve estrarmi una lista di semiorbite, che sono le semiorbite contenute all'interno di un poligono che gli passo. Il tutto mi deve restituire una lista. \n",
    "Un'altro filtro è quello per eliminare i file che non hanno la semiorbita contenuta nella lista di prima.\n",
    "Il contenuto di tutto il mio file deve essere tutto contenuto in funzioni, nulla deve essere lasciato fuori."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [],
   "source": [
    "filtered_semiorbits_geometries = semiorbits_filter_from_geometries(\n",
    "    start_date=start_date, end_date=end_date, orbit_df=df_geometry_payload_orbit, geometries=p\n",
    ")\n",
    "# Filtraggio dei file per semiorbita nella lista filtrata\n",
    "filtered_files_name = filter_matching_orbits(df_filename, filtered_semiorbits_geometries)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>semiorbit_nr</th>\n",
       "      <th>payload</th>\n",
       "      <th>geometry</th>\n",
       "      <th>data_start_time</th>\n",
       "      <th>data_end_time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>178800</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (36.73169 64.95738, 33.76768 60.851...</td>\n",
       "      <td>2021-04-23 12:36:01</td>\n",
       "      <td>2021-04-23 13:10:39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>228271</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (44.3054 -69.59148, 42.15355 -67.67...</td>\n",
       "      <td>2022-03-15 00:34:49</td>\n",
       "      <td>2022-03-15 01:11:59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>240201</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (-131.28035 -69.61125, -133.4405 -6...</td>\n",
       "      <td>2022-06-01 12:21:07</td>\n",
       "      <td>2022-06-01 13:45:38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>267941</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (48.2374 -69.62056, 46.06335 -67.69...</td>\n",
       "      <td>2022-12-01 00:33:36</td>\n",
       "      <td>2022-12-01 01:10:48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>192640</td>\n",
       "      <td>EFD_ULF</td>\n",
       "      <td>LINESTRING (17.58394 64.92558, 14.94301 61.321...</td>\n",
       "      <td>2021-07-23 13:55:10</td>\n",
       "      <td>2021-07-23 14:29:46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39562</th>\n",
       "      <td>111160</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (41.94289 70.23776, 39.73055 68.356...</td>\n",
       "      <td>2020-02-03 12:29:55</td>\n",
       "      <td>2020-02-03 13:07:09</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39591</th>\n",
       "      <td>152960</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (41.94271 70.25637, 39.59044 68.260...</td>\n",
       "      <td>2020-11-04 12:32:02</td>\n",
       "      <td>2020-11-04 13:09:24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39732</th>\n",
       "      <td>146730</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (37.22448 70.22605, 34.99798 68.338...</td>\n",
       "      <td>2020-09-24 12:50:08</td>\n",
       "      <td>2020-09-24 13:27:23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39789</th>\n",
       "      <td>038200</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (36.77177 64.83967, 35.04649 62.530...</td>\n",
       "      <td>2018-10-11 12:37:47</td>\n",
       "      <td>2018-10-11 13:12:26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40082</th>\n",
       "      <td>055530</td>\n",
       "      <td>HEPD</td>\n",
       "      <td>LINESTRING (31.65601 64.80334, 29.93459 62.497...</td>\n",
       "      <td>2019-02-02 12:55:02</td>\n",
       "      <td>2019-02-02 13:29:45</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1977 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      semiorbit_nr  payload  \\\n",
       "5           178800  EFD_ULF   \n",
       "10          228271  EFD_ULF   \n",
       "15          240201  EFD_ULF   \n",
       "61          267941  EFD_ULF   \n",
       "114         192640  EFD_ULF   \n",
       "...            ...      ...   \n",
       "39562       111160     HEPD   \n",
       "39591       152960     HEPD   \n",
       "39732       146730     HEPD   \n",
       "39789       038200     HEPD   \n",
       "40082       055530     HEPD   \n",
       "\n",
       "                                                geometry     data_start_time  \\\n",
       "5      LINESTRING (36.73169 64.95738, 33.76768 60.851... 2021-04-23 12:36:01   \n",
       "10     LINESTRING (44.3054 -69.59148, 42.15355 -67.67... 2022-03-15 00:34:49   \n",
       "15     LINESTRING (-131.28035 -69.61125, -133.4405 -6... 2022-06-01 12:21:07   \n",
       "61     LINESTRING (48.2374 -69.62056, 46.06335 -67.69... 2022-12-01 00:33:36   \n",
       "114    LINESTRING (17.58394 64.92558, 14.94301 61.321... 2021-07-23 13:55:10   \n",
       "...                                                  ...                 ...   \n",
       "39562  LINESTRING (41.94289 70.23776, 39.73055 68.356... 2020-02-03 12:29:55   \n",
       "39591  LINESTRING (41.94271 70.25637, 39.59044 68.260... 2020-11-04 12:32:02   \n",
       "39732  LINESTRING (37.22448 70.22605, 34.99798 68.338... 2020-09-24 12:50:08   \n",
       "39789  LINESTRING (36.77177 64.83967, 35.04649 62.530... 2018-10-11 12:37:47   \n",
       "40082  LINESTRING (31.65601 64.80334, 29.93459 62.497... 2019-02-02 12:55:02   \n",
       "\n",
       "            data_end_time  \n",
       "5     2021-04-23 13:10:39  \n",
       "10    2022-03-15 01:11:59  \n",
       "15    2022-06-01 13:45:38  \n",
       "61    2022-12-01 01:10:48  \n",
       "114   2021-07-23 14:29:46  \n",
       "...                   ...  \n",
       "39562 2020-02-03 13:07:09  \n",
       "39591 2020-11-04 13:09:24  \n",
       "39732 2020-09-24 13:27:23  \n",
       "39789 2018-10-11 13:12:26  \n",
       "40082 2019-02-02 13:29:45  \n",
       "\n",
       "[1977 rows x 5 columns]"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "filtered_semiorbits_geometries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [],
   "source": [
    "filtered_semiorbits_geometries.to_file(\"filtered_semiorbits_geometries.gpkg\", index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>file_name</th>\n",
       "      <th>semiorbit_nr</th>\n",
       "      <th>payload</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_178800_20210423_123601_20...</td>\n",
       "      <td>178800</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_228271_20220315_003449_20...</td>\n",
       "      <td>228271</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_240201_20220601_122107_20...</td>\n",
       "      <td>240201</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_267941_20221201_003336_20...</td>\n",
       "      <td>267941</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>CSES_01_EFD_1_L02_A1_192640_20210723_135510_20...</td>\n",
       "      <td>192640</td>\n",
       "      <td>EFD_ULF</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39562</th>\n",
       "      <td>CSES_HEP_DDD_0111160_20200203_122955_20200203_...</td>\n",
       "      <td>111160</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39591</th>\n",
       "      <td>CSES_HEP_DDD_0152960_20201104_123202_20201104_...</td>\n",
       "      <td>152960</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39732</th>\n",
       "      <td>CSES_HEP_DDD_0146730_20200924_125008_20200924_...</td>\n",
       "      <td>146730</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39789</th>\n",
       "      <td>CSES_HEP_DDD_0038200_20181011_123747_20181011_...</td>\n",
       "      <td>038200</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40082</th>\n",
       "      <td>CSES_HEP_DDD_0055530_20190202_125502_20190202_...</td>\n",
       "      <td>055530</td>\n",
       "      <td>HEPD</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1977 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               file_name semiorbit_nr  payload\n",
       "5      CSES_01_EFD_1_L02_A1_178800_20210423_123601_20...       178800  EFD_ULF\n",
       "10     CSES_01_EFD_1_L02_A1_228271_20220315_003449_20...       228271  EFD_ULF\n",
       "15     CSES_01_EFD_1_L02_A1_240201_20220601_122107_20...       240201  EFD_ULF\n",
       "61     CSES_01_EFD_1_L02_A1_267941_20221201_003336_20...       267941  EFD_ULF\n",
       "114    CSES_01_EFD_1_L02_A1_192640_20210723_135510_20...       192640  EFD_ULF\n",
       "...                                                  ...          ...      ...\n",
       "39562  CSES_HEP_DDD_0111160_20200203_122955_20200203_...       111160     HEPD\n",
       "39591  CSES_HEP_DDD_0152960_20201104_123202_20201104_...       152960     HEPD\n",
       "39732  CSES_HEP_DDD_0146730_20200924_125008_20200924_...       146730     HEPD\n",
       "39789  CSES_HEP_DDD_0038200_20181011_123747_20181011_...       038200     HEPD\n",
       "40082  CSES_HEP_DDD_0055530_20190202_125502_20190202_...       055530     HEPD\n",
       "\n",
       "[1977 rows x 3 columns]"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "filtered_files_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "metadata": {},
   "outputs": [],
   "source": [
    "filtered_files_name.to_csv(\"filtered_files_name.csv\", index=False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".grp2",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
